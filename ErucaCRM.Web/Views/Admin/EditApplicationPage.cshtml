@model ErucaCRM.Web.ViewModels.ApplicationPageVM
@using ErucaCRM.Utility;
@{
    ViewBag.Title = "EditHomePageContent";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@section scripts {

    <script src="@Url.Content("~/Scripts/ckEditor/ckEditor.js")"></script>
    <script src="@Url.Content("~/Scripts/ErucaCRM.Admin/ErucaCRM.Admin.EditApplicationPage.js")" type="text/javascript"></script>
}

@section ReadyScripts
{
ErucaCRM.Admin.EditApplicationPage.pageLoad();
}
<script type="text/javascript">
</script>
<h2>@Model.PageTitle</h2>
@section SideMenuCss
{@*<style>
        .sidemenu {   position: fixed;}        
        .wrapper-inner { border-left: 1px solid #B6B6B6; margin-left: 230px; padding-left: 10px;overflow: hidden; }
        #SideMenu-Configuration { display: block; }
            #SideMenu-Configuration a[type*='@Model.PageTitle'] { background: #fff; color: #17B5F0; }
           #SideMenu-Configuration a[type*='@ViewBag.redirectedFrom'] { background: #fff; color: #17B5F0; }
    </style>*@
    <style>
        .sidemenutd { display: block; }

        .inner-body .wrapper-inner { max-width: 980px; }

        #SideMenu-Configuration { display: block; } 
            #SideMenu-Configuration a[type*='@Model.PageTitle'] { background: #fff; color: #17B5F0; }
           #SideMenu-Configuration a[type*='@ViewBag.redirectedFrom'] { background: #fff; color: #17B5F0; }
    </style>
}

<script type="text/html" id="CustomPageListTemplate">

    <tr>
        <td></td>
        <td class="text-align-left">
            <div data-bind="text: PageTitle"></div>
        </td>
        <td class="text-align-left">
            <div class="_navigate"><a target="_blank" class="_navigate" data-bind="attr:{href:NavigateUrl}"><span data-bind="text:NavigateText"></span></a></div>
        </td>

        <td class="text-align-left">
            <a data-bind="attr: { RemoveAction: RemoveAction, ApplicationPageId: ApplicationPageId, CustomPageId: CustomPageId }, clickBubble: false" onclick="viewModel.AddRemoveCustomPage(this)"><span data-bind="text: Action"></span></a>
        </td>
        <td class="text-align-left">
            <a data-bind="attr: { href: UrlEdit, title: PageTitle }">Edit</a>
        </td>
        <td class="text-align-left">
            <a data-bind="attr: { href: UrlDelete, title: PageTitle ,CustomPageId: CustomPageId }" onclick="viewModel.DeleteCustomPage(this)">Delete</a>

        </td>

    </tr>
</script>
@using (Html.BeginForm())
{
    @Html.HiddenFor(r => r.ContentApplicationPage.CultureInformationId, new { @id = "CultureInformationId" })
    @Html.HiddenFor(r => r.ApplicationPageId, new { @id = "ApplicationPageId" })
    @Html.HiddenFor(r => r.PageTitle)
    @Html.Hidden("returnApplicationPageId", (string)ViewBag.ReturnPageId)
    <div class="profile">
        <div class="control-group">
            <div class="display-label ">
                Page Url
            </div>
            <div class="display-field ">
                @if (Model.IsApplicationPage == true)
                {
                    @Html.TextBoxFor(r => r.PageUrl, new { @class = "input-text", @readonly = "readonly" })

                }
                else
                {
                    @Html.TextBoxFor(r => r.PageUrl, new { @class = "input-text" })
                    <div>@Html.ValidationMessageFor(m => m.PageUrl)</div>
                }
            </div>

        </div>
        <div class="control-group ">
            <div class="display-label ">
                Page Description
            </div>
            <div class="display-field ">
                @Html.TextAreaFor(r => r.PageDescription, new { maxlength = 50, @class = "input-text" })
                @Html.ValidationMessageFor(m => m.PageDescription)
            </div>
        </div>
        <div class="control-group ">
            <div class="display-label ">
            </div>
            <div class="display-field ">
                @Html.RadioButton("Default", "UseDefault", new { @class = "_useDefault", @id = "radioDefault" })@Html.Label("Use Default Content")
                @Html.RadioButton("Default", "UseCustom", new { @class = "_useDefault", @id = "radioCustom" })@Html.Label("Use Custom Content")
                @Html.HiddenFor(r => r.ContentApplicationPage.UseDefaultContent, new { @id = "UseDefault" })
            </div>
        </div>
        <div id="optionContent" class="marT20px">
            <div class="control-group ">
                <div class="display-label ">
                    Content
                </div>
                <div class="display-field ">
                    @Html.TextAreaFor(r => r.ContentApplicationPage.PageContent, new { @class = "ckeditor " })
                </div>
            </div>
            <div class="control-group ">
                <div class="display-label ">
                    Meta Title
                </div>
                <div class="display-field ">
                    @Html.TextBoxFor(r => r.ContentApplicationPage.MetaTitle, new { @class = "input-text _default" })
                </div>
            </div>
            <div class="control-group ">
                <div class="display-label ">
                    Meta Description
                </div>
                <div class="display-field ">
                    @Html.TextBoxFor(r => r.ContentApplicationPage.MetaDescription, new { @class = "input-text _default" })
                </div>
            </div>
        </div>
        <div class="control-group ">
            <div class="display-label ">
                Active
            </div>
            <div class="display-field ">
                @if (Model.IsApplicationPage == true)
                { @Html.CheckBoxFor(r => r.IsActive, new { @disabled = "disabled" })}
                else
                {  @Html.CheckBoxFor(r => r.IsActive)
                }
            </div>
        </div>
        <div class="control-group">
            <div class="display-label  ">
            </div>
            <div class="display-field  ">
                <div class="btnsManageLabel">
                    <input type="submit" class="button small _Save purple" value="Save" />
                    <input type="button" class="button small purple" value="Cancel" />
                </div>
                @if (TempData["DataUpdated"] != null)
                {
                    if (Convert.ToBoolean(TempData["DataUpdated"]) == true)
                    {
                  
                    <div style="color: green">Data updated successfully</div>

                    }
                    else if (Convert.ToBoolean(TempData["DataUpdated"]) == false)
                    {
                    <div class="error">Data not updated</div>
                    }

                }
            </div>
        </div>
    </div>
}
<div class="clear">
    @if (string.IsNullOrEmpty((string)ViewBag.ReturnPageId))
    {
        <div class="control-group">
            <div class="infoheader">
                <span>Associated Pages</span>
            </div>

            <div ><a class="_viewAll button small purple floatLeft" viewall="true">View All Pages</a><a id="btnAddProduct" class="button small purple floatright"  href="@Url.Action("AddCustomPage", new { cultureInformationId_encrypted = (string)ViewBag.CultureInformationId, applicationPageId_encrypted = Model.ApplicationPageId, redirectedFrom = @Model.PageTitle })">Add New Page</a></div>

            <table id="leadProducts">
                <tr>
                    <th class="w50px"></th>
                    <th>Title
                    </th>
                    <th>Link
                    </th>
                    <th colspan="3">Action  
                    </th>
                </tr>
                <tbody id="CustomPageListData" data-bind="template: { name: 'CustomPageListTemplate', foreach: CustomPageList }"></tbody>
            </table>

        </div>
    }
</div>

