@using ErucaCRM.Web.Infrastructure;

@model ErucaCRM.Web.ViewModels.UserVM

@{
    ViewBag.Title = "ErucaCRM | AddUser";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
   
}

<h2>@ViewBag.ModuleName</h2>

@section scripts {
    <script src="@Url.Content("~/Scripts/ErucaCRM.User/ErucaCRM.User.AddUser.js")" type="text/javascript"></script>
}

@section ReadyScripts
{
ErucaCRM.User.AddUser.pageLoad();
}

@using (Html.BeginForm("AddUser", "Admin", FormMethod.Post, new { @id = "userID" }))
{
 
   @Html.AntiForgeryToken()
    //  @Html.ValidationSummary(false)
    <p>@ViewBag.StatusMessage
    </p>
    <p class="error">
        @Html.ValidationSummary(true)
        @ViewBag.ErrorMessage
    </p>
         
    <div class="floatleft w50pc">
        <div class="profile">
            @Html.HiddenFor(model => model.UserId)

            <div class="control-group">
                <div class="display-label">
                </div>
                <span class="requiredfield"></span>


                <div class="display-field">
                    <div class="user-errormsg">@Html.ValidationMessageFor(model => model.FirstName)</div>
                </div>
            </div>
            <div class="control-group">
                <div class="display-label">
                    @Html.LabelFor(model => model.FirstName)
                </div>
                <span class="requiredfield">*</span>


                <div class="display-field">
                    @Html.TextBoxFor(model => model.FirstName, new { maxlength = 50, @class = "input-text" })

                </div>
            </div>


            <div class="control-group">
                <div class="display-label">
                </div>
                <span class="requiredfield"></span>


                <div class="display-field">
                    <div class="user-errormsg"></div>
                </div>
            </div>
            <div class="control-group">
                <div class="display-label">
                    @Html.LabelFor(model => model.LastName)
                </div>
                <span class="requiredfield"></span>
                <div class="display-field">
                    @Html.TextBoxFor(model => model.LastName, new { maxlength = 50, @class = "input-text" })

                </div>
            </div>
            <div class="control-group">
                <div class="display-label">
                </div>
                <span class="requiredfield"></span>


                <div class="display-field">
                    <div class="user-errormsg">@Html.ValidationMessageFor(model => model.EmailId)</div>
                </div>
            </div>
            <div class="control-group">

                <div class="display-label">
                    @Html.LabelFor(model => model.EmailId, new { id = "EmailAddress" })
                </div>
                <span class="requiredfield">*</span>
                <div class="display-field">
                    @Html.EditorFor(model => model.EmailId, new { maxlength = 50, @class = "input-text" })

                </div>
            </div>


            <div class="control-group">
                <div class="display-label">
                </div>
                <span class="requiredfield"></span>


                <div class="display-field">
                    <div class="user-errormsg"></div>
                </div>
            </div>
            <div class="control-group">

                <div class="display-label">
                    @Html.LabelFor(model => model.Address.Street)
                </div>
                <span class="requiredfield"></span>
                <div class="display-field">
                    @Html.TextAreaFor(model => model.Address.Street, new { maxlength = 50, @class = "input-text" })
                    <div class="user-errormsg">@Html.ValidationMessageFor(model => model.Address.Street)</div>
                </div>
            </div>
            <div class="control-group">
                <div class="display-label">
                </div>
                <span class="requiredfield"></span>


                <div class="display-field">
                    <div class="user-errormsg"></div>
                </div>
            </div>
            <div class="control-group">

                <div class="display-label">
                    @Html.LabelFor(model => model.Address.City)
                </div>
                <span class="requiredfield"></span>
                <div class="display-field">
                    @Html.EditorFor(model => model.Address.City, new { @class = "input-text" })

                </div>
            </div>
           
            <div class="control-group">

                <div class="display-label">

                    @Html.LabelFor(model => model.Address.Zipcode)
                </div>
                <span class="requiredfield"></span>
                <div class="display-field">
                    @Html.EditorFor(model => model.Address.Zipcode, new { @class = "input-text" })

                </div>
            </div>
            <div class="control-group">

                <div class="display-field">
                    <div class="user-errormsg">
                        <div class="user-errormsg">@Html.ValidationMessageFor(model => model.Address.Country.CountryId)</div>
                    </div>
                </div>
            </div>
            <div class="control-group">

                <div class="display-label">
                    @Html.LabelFor(model => model.Address.Country.CountryName)
                </div>
                <span class="requiredfield"></span>
                <div class="display-field">
                    @(Html.DropDownListFor(model => model.Address.Country.CountryId, new SelectList(ViewBag.CountryList, "CountryId", "CountryName"), new { @class = "CssCountryCode phoneCode dropdown" }))

                </div>
            </div>
            <div class="control-group">
            </div>
            <div class="control-group">
                <div class="display-label">
                </div>
                <span class="requiredfield"></span>
            </div>
            <div class="control-group">
                <div class="display-label">
                </div>
                <span class="requiredfield"></span>
                <div class="display-field">
                    <input type="submit" id="ButtonAddUser" class="button purple normal _one-click-submit-button" value="Save" />
                    @Html.ActionLink("Back", "UserList", new { /* id=Model.PrimaryKey */ }, new { @class = "button purple normal" })
                </div>

            </div>

        </div>
    </div>
}


