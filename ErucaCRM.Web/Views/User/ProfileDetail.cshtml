@using ErucaCRM.Web.Infrastructure;
@using ErucaCRM.Utility;

@model ErucaCRM.Web.ViewModels.ProfileVM
@{
    ViewBag.Title = "ErucaCRM | ProfileDetail";
    Layout = "~/Views/Shared/_LayoutInner.cshtml";
    var renderType = "";
    var moduleName = "";
    var renderType1 = false;
    var isRenderType1Complete = false;
}
@section scripts {
    <script src="@Url.Content("~/Scripts/ErucaCRM.User/ErucaCRM.User.ProfileDetail.js")" type="text/javascript"></script>
}

@section ReadyScripts
{
ErucaCRM.User.ProfileDetail.pageLoad();
}
@section SideMenuCss
{<style>
    .wrapper-inner { border-left: 1px solid #B6B6B6; width: 88%; padding-left: 10px; overflow: hidden; }
        /*.sidemenu {   position: fixed; min-height:600px;}*/
        /*.wrapper-inner { border-left: 1px solid #B6B6B6; margin-left: 230px; padding-left: 10px;overflow: hidden; }*/
        #SideMenu-Configuration { display: block; }
        #SideMenu-Configuration a[href*='ProfileType'] { background: #0798BC; color: #ffffff; }
 </style>
    @* <style>
        .sidemenutd { display: block; }
        .inner-body .wrapper-inner { max-width: 980px; }
        #SideMenu-Configuration { display: block; }
            #SideMenu-Configuration a[href*='ProfileType'] { background: #fff; color: #800080; }
    </style>*@
}
<h2>@Html.CultureSpecificDisplay(model => model.PageSubHeaders.PageSubHeaderProfileDetail)</h2>
@if (Model.IsDefaultForRegisterdUser == true)
{
    <div class="msgSuccess">@Html.CultureSpecificDisplay(model => model.PageSubHeaders.PageSubHeaderProfileCannotEdited)</div>
}
<div class="buttoncontainer">
    @if (!(Model.IsDefaultForRegisterdUser ?? false))
    {
        <input type="button" class="button small purple _savePermissions permissionbased  floatleft " data-permission="@string.Concat(Constants.MODULE_PROFILE, Constants.PERMISSION_EDIT)" value="@Html.CultureSpecificDisplay(model => model.ButtonSave)" />
    }
@*    @Html.ActionLink(Html.CultureSpecificDisplay(model => model.ButtonBack), "profileType", "", null, new { @class = "button small purple _back floatleft" })*@


    <a href="/User/profileType" class="_back margin3px">
        <input type='button'class="button purple  small normal" value='@Html.CultureSpecificDisplay(model => model.ButtonBack)' />
    </a>
</div>
<div id="PermissionContainer" class="clear-both tablecontainer" style="min-height: 400px">

    <h3>@Model.ProfileName</h3>

    @foreach (var x in @Model.ProfilePermissionModels)
    {

        //header 1      
        renderType = x.ModulePermission.Module.RenderType;

        //detail

        if (renderType == Convert.ToString((int)ErucaCRM.Utility.Enums.RenderType.Table))
        {
            if (!renderType1)
            {
        @Html.Raw("<table>");
       
        <tr>
            <th>@Html.CultureSpecificDisplay(model => model.GridHeaders.GridHeaderModuleName)
            </th>
            <th>@Html.CultureSpecificDisplay(model => model.GridHeaders.GridHeaderView)
            </th>
            <th>@Html.CultureSpecificDisplay(model => model.GridHeaders.GridHeaderCreate)
            </th>

            <th>@Html.CultureSpecificDisplay(model => model.GridHeaders.GridHeaderEdit)</th>
            <th>@Html.CultureSpecificDisplay(model => model.GridHeaders.GridHeaderDelete)</th>
        </tr>
                            renderType1 = true;
            }
            if (moduleName != x.ModulePermission.Module.ModuleCONSTANT)
            {
                if (x.ModulePermission.Module.ParentModuleId == null)
                {
                    continue;
                }
                if (moduleName != "")
                {
        @Html.Raw("</tr>");
                }
             
        @Html.Raw("<tr>");<td>@CommonFunctions.GetGlobalizedLabel("Profile", x.ModulePermission.Module.ModuleCONSTANT)</td>
            }      
           
        <td>
            @if (x.ModulePermission.IsReadOnly == true || ((Model.IsDefaultForRegisterdUser ?? false)))
            {
                if (x.HasAccess == true)
                {
                    
                @Html.CheckBox("chkPermission", new { pid = x.ProfileId, ppid = x.ProfilePermissionId, @checked = x.HasAccess, @disabled = "disabled" });
                }
                else
                {                  
                @Html.CheckBox("chkPermission", new { pid = x.ProfileId, ppid = x.ProfilePermissionId, @disabled = "disabled" });
                }

            }
            else
            {
                if (x.HasAccess == true)
                {
                @Html.CheckBox("chkPermission", new { pid = x.ProfileId, ppid = x.ProfilePermissionId, @checked = x.HasAccess });
                }
                else
                { @Html.CheckBox("chkPermission", new { pid = x.ProfileId, ppid = x.ProfilePermissionId });
                }
            }

        </td>        

            moduleName = x.ModulePermission.Module.ModuleCONSTANT;
        }
        //header 2

        if (renderType == Convert.ToString((int)ErucaCRM.Utility.Enums.RenderType.List))
        {
            if (!isRenderType1Complete)
            {   
        @Html.Raw("</table>");
                             isRenderType1Complete = true;
            }
            if (moduleName != x.ModulePermission.Module.ModuleCONSTANT)
            {
                if (x.ModulePermission.Module.ParentModuleId == null)
                {
        <div>
            <h3>
                @CommonFunctions.GetGlobalizedLabel("Profile", "PageSubHeader" + x.ModulePermission.Module.ModuleCONSTANT)
            </h3>
        </div>  moduleName = x.ModulePermission.Module.ModuleCONSTANT;
                continue;
                }

            }
              
   
           
        <div class="subpermission">
            @CommonFunctions.GetGlobalizedLabel("Profile", x.ModulePermission.Permission.PermissionCONSTANT)

            @if (x.ModulePermission.IsReadOnly == true || ((Model.IsDefaultForRegisterdUser ?? false)))
            {
                if (x.HasAccess == true)
                {
                @Html.CheckBox("chkPermission", new { pid = x.ProfileId, ppid = x.ProfilePermissionId, @checked = x.HasAccess, @disabled = "disabled" });
                }
                else
                { @Html.CheckBox("chkPermission", new { pid = x.ProfileId, ppid = x.ProfilePermissionId, @disabled = "disabled" });
                }

            }
            else
            {
                if (x.HasAccess == true)
                {
                @Html.CheckBox("chkPermission", new { pid = x.ProfileId, ppid = x.ProfilePermissionId, @checked = x.HasAccess });
                }
                else
                { @Html.CheckBox("chkPermission", new { pid = x.ProfileId, ppid = x.ProfilePermissionId });
                }
            }

        </div>        

            moduleName = x.ModulePermission.Module.ModuleCONSTANT;
        }
    }


</div>
@*<center><input type="button" id="SavePermissions" class="button small purple _SavePermissions" value="Save" /></center>*@
<div class="buttonbottomcontainer clear-both">
    @if (!(Model.IsDefaultForRegisterdUser ?? false))
    {
        <input type="button" class="button small purple _savePermissions floatleft permissionbased" data-permission="@string.Concat(Constants.MODULE_PROFILE, Constants.PERMISSION_EDIT)"value="@Html.CultureSpecificDisplay(model => model.ButtonSave)" />
    }
@*   @Html.ActionLink(Html.CultureSpecificDisplay(model => model.ButtonBack), "profileType", "admin", null, new { @class = "button small purple _back floatleft" })*@

    <a href="/User/profileType" class="_back">
        <input type='button'class="button purple normal" value='@Html.CultureSpecificDisplay(model => model.ButtonBack)' /></a>
</div>
