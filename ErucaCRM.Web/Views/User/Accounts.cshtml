@using ErucaCRM.Web.Infrastructure;
@using ErucaCRM.Utility;

@model ErucaCRM.Web.ViewModels.AccountVM

@{
    ViewBag.Title = "ErucaCRM | Accounts";
    Layout = "~/Views/Shared/_LayoutInner.cshtml";
}
@section scripts {
    @*  <script src="@Url.Content("~/Scripts/ErucaCRM.User/ErucaCRM.User.Accounts.js")" type="text/javascript"></script>*@
    @Scripts.Render("~/bundles/ContactListScripts")

}

@section ReadyScripts
{
ErucaCRM.User.AccountAndContact.pageLoad();
ErucaCRM.Framework.Common.ApplyHelp("Account");

}



<div class="gridspace">
<div class="tab">
    <ul>
        @if(User.IsInRole(string.Concat(Constants.MODULE_ACCOUNT,Constants.PERMISSION_VIEW)))
        {
        <li class="active permissionbased" data-permission="@string.Concat(Constants.MODULE_ACCOUNT, Constants.PERMISSION_VIEW)">
            <a  id="tabAccount">@Html.CultureSpecificDisplay(model => model.PageSubHeaders.AccountTab)</a>
        </li>
        }
        @if(User.IsInRole(string.Concat(Constants.MODULE_CONTACT,Constants.PERMISSION_VIEW)))
        {
        <li class="permissionbased" data-permission="@string.Concat(Constants.MODULE_CONTACT, Constants.PERMISSION_VIEW)">
            <a id="TabContacts">@Html.CultureSpecificDisplay(model => model.PageSubHeaders.ContactTab)</a>
        </li>
        }
    </ul>
    <div class="clear"></div>
</div>

@if (User.IsInRole(string.Concat(Constants.MODULE_ACCOUNT, Constants.PERMISSION_VIEW)))
{  
    <div id="accountView">
        <h2>@Html.CultureSpecificDisplay(model => model.PageHeaderManage)</h2>
        <script type="text/html" id="tmplAccount">
            <div class="Account-section">
                <ul>
                    <li data-bind="attr: { href: DetailUrl, title: AccountName }">
                        <div class="top-section" style="height:15px">
                          <div class="truncatedText  float-left">
                                <a data-bind="attr: { href: DetailUrl, title: AccountName }" class="back-bg">
                                <img src="/Content/images/building.png"><span data-bind="text: AccountName"></span> </a>
                          </div>
                         <div class="float-right">
                                <a data-helpkey="deleteaccount" data-helppos="top-left" class="floatright permissionbased" data-permission="@string.Concat(Constants.MODULE_ACCOUNT, Constants.PERMISSION_DELETE)" data-bind="click: function () { viewModel.DeleteAccount(this) }">
                                <img src="/Content/images/cross-gray.png"></a>
                            <a class="floatright permissionbased marR10px" data-permission="@string.Concat(Constants.MODULE_ACCOUNT, Constants.PERMISSION_EDIT)" data-bind="attr: { href: EditUrl, AccountId: AccountId }">
                                <img src="/Content/images/Edit.jpg"></a>
                         </div>

                        </div>
                        <div class="box">
                            <p class="call"><label>@Html.CultureSpecificDisplay(model=>model.PageLabels.OwnerName)</label>: <span data-bind="text: AccountOwner"></span></p>
                            <p class="call"><label>@Html.CultureSpecificDisplay(model=>model.PageLabels.Phone)</label>: <span data-bind="text: Phone"></span></p>
                            <p class="call"><label>@Html.CultureSpecificDisplay(model=>model.PageLabels.AccountType)</label>: <span data-bind="text: AccountType"></span></p>
                        </div>
                    </li>
                </ul>
            </div>


        </script>

        <script type="text/html" id="TagListTemplate">

            <div>
                <a class="contacttagname" data-bind="event: { click: function () { viewModel.GetTaggedAccounts(this) } }"><span data-bind="    text: TagName"></span></a>
            </div>

        </script>
        <div class="buttoncontainer permissionbased" data-helpkey="addaccount" data-helppos="top-right" data-permission="@string.Concat(Constants.MODULE_ACCOUNT, Constants.PERMISSION_CREATE)">
            @Html.ActionLink(Convert.ToString(Html.CultureSpecificDisplay(model => model.ButtonCreate)), "Account", "User", null, new { @class = "button _backtohere" })
        </div>

        <div class="control-group">

            <div class="searchdiv">
                <button type="button" id="AccountButtonSearchByTag" class="button buttonSearch" value="@Html.CultureSpecificDisplay(model => model.PageButtons.ButtonAccountSearchByTag)" >@Html.CultureSpecificDisplay(model => model.PageButtons.ButtonAccountSearchByTag)</button>

                <div id="AccountdivFilterInfo" class="contacttagfilterinfo displaynone">
                    <img class="tagfiltericon" src="~/Content/images/filter-icon.png" /><span class="tagfilterspan">@Html.CultureSpecificDisplay(model => model.PageLabels.TagFilteredByText)  : </span><span id="AccountspanCurrentTagName" class="tagfilterspan"></span>
                    <a onclick="viewModel.ClearAccountTagFilter();">
                        <img class="tagfiltercross" src="~/Content/images/greencross-icon.png" /></a>
                </div>


            </div>
        </div>


        <div id="AccountdivTagSearch" class="divTagSearch _popup">
            <div class="floatright">
                <a onclick="return viewModel.AccountHideTagFilterMenu();"><span class="tagcross">
                    <img src="~/Content/images/cross.png" /></span></a>
            </div>
            <div id="TagListData" data-bind="template: { name: 'TagListTemplate', foreach: TagList }">
            </div>
            <div>
                <br />
                <input id="TextBoxAccountTagSearchName" class="input-textsearch" placeholder="@Html.CultureSpecificDisplay(model => model.PageLabels.SearchByTagPlaceHolder)" />
                &nbsp;
             <input id="ButtonAccountTagSearchName" type="button" class="button purple small buttonTagSearch" value="@Html.CultureSpecificDisplay(model => model.PageButtons.ButtonAccountTagSearchName)"  />
            </div>
        </div>
        <div class="clear _roleselector">
            <table>
                <tbody id="AccountList" data-bind="template: { name: 'tmplAccount', foreach: AccountList }"></tbody>
            </table>
            <div id="divNoRecord" class="divNoRecordBottmBorder " style="display: none">
            </div>
        </div>
        <div id="PagerAccounts" class="AccountPager"></div>
    </div>
   
}

<section>
    @if (User.IsInRole(string.Concat(Constants.MODULE_CONTACT, Constants.PERMISSION_VIEW)))
    {  
        <div id="contactsView" style="display: none">
            @Html.Partial("_ContactsDetail", new ErucaCRM.Web.ViewModels.ContactVM())
        </div>
    }
</section>
    </div>
